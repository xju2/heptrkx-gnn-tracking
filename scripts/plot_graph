#!/usr/bin/env python

if __name__ == "__main__":
    import os
    import argparse

    parser = argparse.ArgumentParser(description='Keras train pairs for each layer-pairs')
    add_arg = parser.add_argument
    add_arg('input_dict', type=str, help='INPUT.npz')
    add_arg('target_dict', type=str, help='TARGET.npz')
    add_arg('outname', type=str, help='output name, graph.pdf')
    add_arg('--truth', action='store_true', help='plot only true')
    add_arg('--indir', help='input directory', default='./')

    args = parser.parse_args()
    in_dir = args.indir
    input_dict = os.path.join(in_dir, args.input_dict)
    target_dict = os.path.join(in_dir, args.target_dict)
    outname = args.outname
    only_true = args.truth

    from heptrkx.nx_graph.utils_io import load_data_dicts
    from heptrkx.nx_graph.utils_data import data_dict_to_nx
    from heptrkx.nx_graph.utils_plot import plot_networkx

    import matplotlib.pyplot as plt

    input_dd = load_data_dicts(input_dict)
    target_dd = load_data_dicts(target_dict)

    graph = data_dict_to_nx(input_dd, target_dd, use_digraph=False, bidirection=False)

    fig, ax = plt.subplots(figsize=(10, 10), constrained_layout=True)
    plot_networkx(graph, ax=ax, only_true=only_true)
    plt.savefig(outname)
