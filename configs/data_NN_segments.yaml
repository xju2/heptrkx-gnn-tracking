#layers: [7, 8, 9, 10, 24, 25, 26, 27, 40, 41]
layers: [7, 8, 9, 10, 24]
#layers: [24, 25, 26, 27, 40, 41]
track_ml:
    dir:      /global/cfs/projectdirs/m3443/usr/xju/heptrkx/codalab/inputs/train_all
    detector: /global/cfs/projectdirs/m3443/usr/xju/heptrkx/codalab/inputs/detector.csv

true_hits:
    #layers: [7, 8, 9, 10, 24, 25, 26, 27, 40, 41]
    layers: [24, 25, 26, 27, 40, 41]
    dir: /global/cfs/projectdirs/atlas/xju/heptrkx/codalab/outputs/true_pairs

doublets_for_training:
    base_dir: /global/cscratch1/sd/xju/heptrkx/codalab/outputs/pairs
    true_pairs: merged_true_pairs # only true pairs
    all_pairs: all_pairs # all pairs, used for training, testing, for Graph

doublet_training:
    batch_size: 512
    epochs: 50
    eff_cut: 0.95
    model_output_dir: /global/cfs/projectdirs/atlas/xju/tracking/PairsFromNN/modelNew
    model: fully_connected_classifier
    features: ['dphi', 'dz', 'dr', 'phi_slope', 'z0', 'deta', 'deta1', 'dphi1']

doublets_for_graph: ## input pairs from all_pairs
    selected: /global/cscratch1/sd/xju/heptrkx/codalab/NNbasedSegments/segments4cuts

segments_from_NN:
    evtid: "21001"
    selected: /global/cscratch1/sd/xju/heptrkx/codalab/NNbasedSegments/segments4graph
    threshold: /global/cfs/projectdirs/atlas/xju/heptrkx/codalab/analysis/NNbased_Segments/cuts_v1.txt
    layers: [7, 8, 9, 10, 24]
    cuts: [0.95, 0.95, 0.95, 0.80, 0.5, 0.5, 0.5, 0.5, 0.5]

# make graphs via hybrid approach
make_graph:
    nevts: 1
    out_graph: /global/cfs/projectdirs/atlas/xju/heptrkx/codalab/outputs/graphs/GraphsFromHybridSources
    input_segments: /global/cscratch1/sd/xju/heptrkx/codalab/NNbasedSegments/segments4graph
    input_data: /global/cfs/projectdirs/m3443/usr/xju/heptrkx/codalab/inputs/train_all
    layers: [7, 8, 9, 10, 24, 25, 26, 27, 40, 41]

segment_training:
    output_dir: /global/cfs/projectdirs/m3443/usr/xju//heptrkx/codalab/models/segments
    model_name: VARY2 
    prod_name: EdgeFeaturesTwoGraphHybridSource_v1
    log_name: big.log
    input_type: 'data_dict'
    parameters:
        time_lapse:  180 # how often save checkpoint in seconds
        batch_size: 1
        iterations: 200000
        iter_per_job: 20000
        n_iters: 8
        learning_rate: 0.001
        real_weight: 10.0
        fake_weight: 1.
